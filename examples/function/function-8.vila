hàm sizeof(list)
{
    biến size = 0;

    với (biến i = 0; list[i]; i += 1)
    {
        size += 1;
    }

    trả size;
}

hàm append(list, element)
{
    list[sizeof[list]] = element;
}

hàm prepend(list, element)
{
    biến result = [element];

    với (biến i = 0; i < sizeof(list); i += 1)
    {
        result[i + 1] = list[i];
    }
    
    trả result;
}

hàm foldl(oper, initial, list)
{
    với (biến i = 0; list[i]; i += 1)
    {
        initial = oper(initial, list[i]);
    }

    trả initial;
}

hàm foldr(oper, initial, list)
{
    biến last = sizeof(list) - 1;

    với (biến i = last; i >= 0; i -= 1)
    {
        initial = oper(list[i], initial);
    }

    trả initial;
}

hàm map(proc, list)
{
    hàm maphelper(first, result)
    {
        trả prepend(result, proc(first));
    }

    trả foldr(maphelper, [], list);
}

hàm filter(pred, list)
{
    hàm helper(first, result)
    {
        nếu (pred(first))
        {
            trả prepend(result, first);
        }
        thì
        {
            trả result;
        }
    }

    trả foldr(helper, [], list);
}

biến result = map(hàm (num) { trả num * num; }, [1, 2, 3, 4, 5]);
biến greater = filter(hàm (num) { trả num > 2; }, [1, 2, 3, 4, 5]);

in(result);
in(greater);
