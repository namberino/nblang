// doublely linked list
lớp Node
{
    khởi_tạo(data)
    {
        đây.data = data;
        đây.next = trống;
        đây.prev = trống;
    }
}

lớp DoublelyLinkedList
{
    khởi_tạo()
    {
        đây.head = trống;
    }

    // insert at the beginning of the list
    push(new_data)
    {
        biến new_node = Node(new_data);
        new_node.next = đây.head;

        nếu (đây.head != trống)
        {
            đây.head.prev = new_node;
        }

        đây.head = new_node;
    }

    remove(value)
    {
        biến current_node = đây.head;

        khi (current_node != trống)
        {
            nếu (current_node.data == value)
            {
                nếu (current_node.prev != trống và current_node.next != trống)
                {
                    current_node.prev.next = current_node.next;
                    current_node.next.prev = current_node.prev;
                }
                thì
                {
                    đây.head = current_node.next;
                }

                dừng;
            }

            current_node = current_node.next;
        }
    }

    bottom_iterate()
    {
        in("Checking from bottom up:");
        
        biến current_node = đây.head;

        khi (current_node.next != trống)
        {
            current_node = current_node.next;
        }

        khi (current_node != trống)
        {
            in("Checked " + current_node.data);
            current_node = current_node.prev;
        }
    }
}

biến dll = DoublelyLinkedList();

dll.push(1);
dll.push(2);
dll.push(3);
dll.push(4);
dll.push(5);

dll.bottom_iterate();
in("");

in("Removing node '3'");
dll.remove(3);
in("");

dll.bottom_iterate();
