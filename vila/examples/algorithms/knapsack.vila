hàm max(arg1, arg2)
{
    nếu (arg1 >= arg2)
        trả arg1;
    trả arg2;
}

hàm knapsack(W, wt, val, n)
{
    biến K = [];

    với (biến i = 0; i < n + 1; i += 1)
    {
        biến li = [];

        với (biến j = 0; j < W + 1; j += 1)
        {
            li[j] = 0;
        }

        K[i] = li;
    }

    với (biến i = 0; i < n + 1; i += 1)
    {
        với (biến w = 0; w < W + 1; w += 1)
        {
            nếu (i == 0 hoặc w == 0)
            {
                K[i][w] = 0;
            }
            thì nếu (wt[i - 1] <= w)
            {
                K[i][w] = max(val[i - 1] + K[i - 1][w - wt[i - 1]], K[i - 1][w]);
            }
            thì
            {
                K[i][w] = K[i - 1][w];
            }
        }
    }

    trả K[n][W];
}

biến val = [2, 3, 4, 5, 6, 7, 8]; // list of values of items
biến wt = [3, 4, 5, 6, 9, 15, 20]; // list of weights of the items
biến W = 20; // max weight capacity of knapsack
biến n = độ_dài(val); // number of items

in("Result: " + knapsack(W, wt, val, n));
